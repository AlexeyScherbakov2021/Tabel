<ListBoxItem x:Class="Tabel.Component.TabelPanel.TabelDayPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Tabel.Component.TabelPanel"
             xmlns:conv="clr-namespace:Tabel.Infrastructure.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="100" d:DesignWidth="800" >

    <ListBoxItem.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/../../Styles/ComboBoxNotArrow.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <conv:Convert0ToNull x:Key="Convert0ToNull"/>


        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="Gray"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="Blue"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="Blue"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="Blue"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="Blue"/>

        <Style TargetType="ListBoxItem">

            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type ListBoxItem}">

                            <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">

                            <Border x:Name="border" BorderThickness="1" Padding="1.5" CornerRadius="2" Margin="2,0">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="3" Opacity="0.4" ShadowDepth="0"/>
                                </Border.Effect>
                                <StackPanel>
                                    <TextBlock x:Name="NumberDay" Text="{Binding DayString}" TextAlignment="Center" Background="LightSteelBlue" 
                                                   Foreground="Black" 
                                                   FontWeight="Bold" SnapsToDevicePixels="True" Focusable="False"
                                                  ToolTip="Рабочий день"
                                                   />

                                    <StackPanel Orientation="Horizontal">
                                        <ComboBox Width="28" HorizontalContentAlignment="Center" Focusable="False"
                                                Style="{StaticResource SimpleComboBox}"
                                                DisplayMemberPath="t_name"
                                                ToolTip="{Binding SelectedItem.t_desc, RelativeSource={RelativeSource Self}}"
                                                SelectedIndex="{Binding td_KindId, Mode=TwoWay}"
                                                ItemsSource="{Binding ItemsKind, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                                                      GotFocus="ComboBox_GotFocus" SelectionChanged="ComboBox_SelectionChanged">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Border Background="Snow" Width="26" CornerRadius="3" BorderBrush="Gray" BorderThickness="1" ToolTip="{Binding t_desc}">
                                                        <TextBlock HorizontalAlignment="Center" Text="{Binding t_name}" />
                                                    </Border>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                        <TextBox x:Name="TBHours" Text="{Binding td_Hours, Mode=TwoWay, StringFormat=0.#, Converter={StaticResource Convert0ToNull}}" 
                                                     Padding="2,0" MinWidth="24" 
                                                     HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                                                     GotFocus="TextBox_GotFocus" KeyDown="TextBox_KeyDown" >
                                        </TextBox>

                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBox Text="{Binding td_Hours2, Mode=TwoWay,StringFormat=0.#}" Visibility="{Binding VisibilityHours}" Padding="2,0" 
                                                 MinWidth="28" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                                                 IsReadOnly="True" ToolTip="Превышение часов"
                                                 Foreground="Red" GotFocus="TextBox_GotFocus" IsVisibleChanged="TextBox_IsVisibleChanged" />
                                        <TextBox Text="{Binding WhiteHours ,Mode=OneWay, StringFormat=0.#}" Visibility="{Binding VisibilityHours}" Padding="2,0" 
                                                 MinWidth="24" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                                                 ToolTip="Должно быть так"
                                                 IsReadOnly="True" GotFocus="TextBox_GotFocus" IsVisibleChanged="TextBox_IsVisibleChanged" />
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                        </Border>

                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding OffDay}" Value="True">
                                    <Setter Property="Background" Value="#E0C4DE" TargetName="NumberDay"/>
                                    <Setter Property="ToolTip" Value="Выходной день" TargetName="NumberDay"/>
                                </DataTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        </ResourceDictionary>
    </ListBoxItem.Resources>


</ListBoxItem>
